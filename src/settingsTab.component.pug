h3(translate) Background

.form-line
    .header
        .title(translate) Enable background
        .description 
    toggle(
        [(ngModel)]='config.store.backgroundPlugin.backgroundEnabled',
        (ngModelChange)='apply();',
    )

.content-box(*ngIf='config.store.backgroundPlugin.backgroundEnabled === true')
    .form-line
        .header
            .title(translate) Background path
        .input-group.w-75
            input.form-control.background-input(
                type='text',
                [(ngModel)]='config.store.backgroundPlugin.backgroundPath',
                (ngModelChange)='apply();',
            )
            button.btn.btn-secondary((click)='pickFile()')
                i.fas.fa-folder-open
    .form-line
        .header
            .title(translate) Background show type
        .btn-group
            input.btn-check(
                type='radio',
                name='backgroundShowType',
                [(ngModel)]='config.store.backgroundPlugin.backgroundShowType',
                (ngModelChange)='apply();' 
                id='showTypeFullscreen',
                [value]='"fullscreen"'
            )
            label.btn.btn-secondary(for='showTypeFullscreen')
                span(translate) Fullscreen
            input.btn-check(
                type='radio',
                name='backgroundShowType',
                [(ngModel)]='config.store.backgroundPlugin.backgroundShowType',
                (ngModelChange)='apply();' 
                id='showTypeFullscreenFloat',
                [value]='"float"'
            )
            label.btn.btn-secondary(for='showTypeFullscreenFloat')
                span(translate) Float
    .content-box(*ngIf='config.store.backgroundPlugin.backgroundShowType === "fullscreen"')
        .form-line
            .header
                .title(translate) Fullscreen type
            .btn-group
                input.btn-check(
                    type='radio',
                    name='backgroundFullscreenType',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFullscreenType',
                    (ngModelChange)='apply();' 
                    id='fullscreenTypeContain',
                    [value]='"contain"'
                )
                label.btn.btn-secondary(for='fullscreenTypeContain')
                    span(translate) Contain
                input.btn-check(
                    type='radio',
                    name='backgroundFullscreenType',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFullscreenType',
                    (ngModelChange)='apply();' 
                    id='fullscreenTypeCover',
                    [value]='"cover"'
                )
                label.btn.btn-secondary(for='fullscreenTypeCover')
                    span(translate) Cover
        .form-line(*ngIf='config.store.backgroundPlugin.backgroundFullscreenType === "contain"')
            .header
                .title(translate) Repeat type
            .btn-group
                input.btn-check(
                    type='radio',
                    name='backgroundFullscreenRepeatType',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFullscreenRepeatType',
                    (ngModelChange)='apply();' 
                    id='fullscreenRepeatTypeRepeat',
                    [value]='"repeat"'
                )
                label.btn.btn-secondary(for='fullscreenRepeatTypeRepeat')
                    span(translate) Repeat
                input.btn-check(
                    type='radio',
                    name='backgroundFullscreenRepeatType',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFullscreenRepeatType',
                    (ngModelChange)='apply();' 
                    id='fullscreenRepeatTypeNoRepeat',
                    [value]='"no-repeat"'
                )
                label.btn.btn-secondary(for='fullscreenRepeatTypeNoRepeat')
                    span(translate) No Repeat

    .content-box(*ngIf='config.store.backgroundPlugin.backgroundShowType === "float"')
        .form-line
            .header
                .title(translate) Float size(px)
            input.form-control.font-size-input(
                type='number',
                min='0',
                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatSize',
                (ngModelChange)='apply();',
            )
        .form-line
            .header
                .title(translate) Float X offset(px)
            input.form-control.font-size-input(
                type='number',
                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatX',
                (ngModelChange)='apply();',
            )
        .form-line
            .header
                .title(translate) Float Y offset(px)
            input.form-control.font-size-input(
                type='number',
                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatY',
                (ngModelChange)='apply();',
            )

        .form-line
            .header
                .title(translate) Float X align
            .btn-group
                input.btn-check(
                    type='radio',
                    name='floatXAlign',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFloatXAlign',
                    (ngModelChange)='apply();' 
                    id='floatXAlignLeft',
                    [value]='"left"'
                )
                label.btn.btn-secondary(for='floatXAlignLeft')
                    span(translate) Left
                input.btn-check(
                    type='radio',
                    name='floatXAlign',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFloatXAlign',
                    (ngModelChange)='apply();' 
                    id='floatXAlignCenter',
                    [value]='"center"'
                )
                label.btn.btn-secondary(for='floatXAlignCenter')
                    span(translate) Center
                input.btn-check(
                    type='radio',
                    name='floatXAlign',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFloatXAlign',
                    (ngModelChange)='apply();' 
                    id='floatXAlignRight',
                    [value]='"right"'
                )
                label.btn.btn-secondary(for='floatXAlignRight')
                    span(translate) Right
        .form-line
            .header
                .title(translate) Float Y align
            .btn-group
                input.btn-check(
                    type='radio',
                    name='floatYAlign',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFloatYAlign',
                    (ngModelChange)='apply();' 
                    id='floatYAlignTop',
                    [value]='"top"'
                )
                label.btn.btn-secondary(for='floatYAlignTop')
                    span(translate) Top
                input.btn-check(
                    type='radio',
                    name='floatYAlign',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFloatYAlign',
                    (ngModelChange)='apply();' 
                    id='floatYAlignCenter',
                    [value]='"center"'
                )
                label.btn.btn-secondary(for='floatYAlignCenter')
                    span(translate) Center
                input.btn-check(
                    type='radio',
                    name='floatYAlign',
                    [(ngModel)]='config.store.backgroundPlugin.backgroundFloatYAlign',
                    (ngModelChange)='apply();' 
                    id='floatYAlignBottom',
                    [value]='"bottom"'
                )
                label.btn.btn-secondary(for='floatYAlignBottom')
                    span(translate) Bottom

    .form-line
        .header
            .title(translate) Background opacity(%)
        input.form-control.font-size-input(
            type='number',
            min='0',
            max='100',
            [(ngModel)]='config.store.backgroundPlugin.backgroundOpacity',
            (ngModelChange)='apply();',
        )
    .form-line
        .header
            .title(translate) Background blur(px)
        input.form-control.font-size-input(
            type='number',
            min='0',
            max='100',
            step='0.1',
            [(ngModel)]='config.store.backgroundPlugin.backgroundBlur',
            (ngModelChange)='apply();',
        )
    .form-line
        .header
            .title(translate) Background brightness(%)
        input.form-control.font-size-input(
            type='number',
            min='0',
            max='100',
            [(ngModel)]='config.store.backgroundPlugin.backgroundBrightness',
            (ngModelChange)='apply();',
        )
    .form-line
        .header
            .title(translate) Background contrast(%)
        input.form-control.font-size-input(
            type='number',
            min='0',
            max='100',
            [(ngModel)]='config.store.backgroundPlugin.backgroundContrast',
            (ngModelChange)='apply();',
        )
    .form-line
        .header
            .title(translate) Group list transparent(%, 0 = disable)
            .description(translate) Make home page menu and other group list background transparent
        input.form-control.font-size-input(
            type='number',
            min='0',
            max='100',
            [(ngModel)]='config.store.backgroundPlugin.backgroundListGroupTransparent',
            (ngModelChange)='apply();',
        )
    .form-line
        .header
            .title(translate) Terminal toolbar transparent(%, 0 = disable)
            .description(translate) Make terminal toolbar background transparent
        input.form-control.font-size-input(
            type='number',
            min='0',
            max='100',
            [(ngModel)]='config.store.backgroundPlugin.backgroundTerminalToolbarTransparent',
            (ngModelChange)='apply();',
        )

h3(translate) UI Font
.form-line
    .header
        .title(translate) Enable UI font replace
        .description(translate) Do not affect the terminal font, the terminal font still uses the font in the [appearance] configuration
    toggle(
        [(ngModel)]='config.store.backgroundPlugin.uiFontEnabled',
        (ngModelChange)='apply();',
    )

.content-box(*ngIf='config.store.backgroundPlugin.uiFontEnabled === true')
    .form-line
        .header
            .title(translate) UI Font Family
        .input-group.w-75
            input.form-control.font-family-input(
                type='text',
                [(ngModel)]='config.store.backgroundPlugin.uiFontFamily',
                (ngModelChange)='apply();',
            )
            input.form-control.font-size-input(
                type='number',
                min='5',
                max='48',
                [(ngModel)]='config.store.backgroundPlugin.uiFontSize',
                (ngModelChange)='apply();',
            )


    .form-line
        .header
            .title(translate) Fix close button font
            .description(translate) After enable, restore the tab closing button to the default style
        toggle(
            [(ngModel)]='config.store.backgroundPlugin.uiFontTabBarCloseBtnFix',
            (ngModelChange)='apply();',
        )


h3(translate) Tabs
.form-line
    .header
        .title(translate) Enable Tabs parameter override
        .description(translate) 
    toggle(
        [(ngModel)]='config.store.backgroundPlugin.tabsOverrideEnabled',
        (ngModelChange)='apply();',
    )

.content-box(*ngIf='config.store.backgroundPlugin.tabsOverrideEnabled === true')
    .form-line
        .header
            .title(translate) Tabs dynamic width min(px)
        input.form-control(
            type='number',
            min='50',
            max='1000',
            [(ngModel)]='config.store.backgroundPlugin.tabsFlexMinWidth',
            (ngModelChange)='apply();',
        )
    .form-line
        .header
            .title(translate) Tabs fixed width(px)
        input.form-control(
            type='number',
            min='50',
            max='1000',
            [(ngModel)]='config.store.backgroundPlugin.tabsFixedWidth',
            (ngModelChange)='apply();',
        )