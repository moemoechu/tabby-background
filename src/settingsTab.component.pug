h3(translate) Background

ul.nav-tabs(ngbNav, #nav='ngbNav')
    li(ngbNavItem)
        a(ngbNavLink, translate) Background
        ng-template(ngbNavContent)
            .form-line
                .header
                    .title(translate) Enable background
                    .description(translate) Background image master switch
                toggle(
                    [(ngModel)]='config.store.backgroundPlugin.backgroundEnabled',
                    (ngModelChange)='apply();',
                )

            .content-box(*ngIf='config.store.backgroundPlugin.backgroundEnabled === true')
                .form-line
                    .header
                        .title(translate) Background path
                        .description(translate) Relative path begins with ../../../data
                    .input-group.w-50
                        input.form-control(
                            type='text',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundPath',
                            (ngModelChange)='apply();',
                        )
                        button.btn.btn-secondary((click)='pickFile()')
                            i.fas.fa-folder-open
                .form-line
                    .header
                        .title(translate) Background show type
                    .btn-group
                        input.btn-check(
                            type='radio',
                            name='backgroundShowType',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundShowType',
                            (ngModelChange)='apply();' 
                            id='showTypeFullscreen',
                            [value]='"fullscreen"'
                        )
                        label.btn.btn-secondary(for='showTypeFullscreen')
                            span(translate) Fullscreen
                        input.btn-check(
                            type='radio',
                            name='backgroundShowType',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundShowType',
                            (ngModelChange)='apply();' 
                            id='showTypeFullscreenFloat',
                            [value]='"float"'
                        )
                        label.btn.btn-secondary(for='showTypeFullscreenFloat')
                            span(translate) Float
                .content-box(*ngIf='config.store.backgroundPlugin.backgroundShowType === "fullscreen"')
                    .form-line
                        .header
                            .title(translate) Fullscreen type
                        .btn-group
                            input.btn-check(
                                type='radio',
                                name='backgroundFullscreenType',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFullscreenType',
                                (ngModelChange)='apply();' 
                                id='fullscreenTypeContain',
                                [value]='"contain"'
                            )
                            label.btn.btn-secondary(for='fullscreenTypeContain')
                                span(translate) Contain
                            input.btn-check(
                                type='radio',
                                name='backgroundFullscreenType',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFullscreenType',
                                (ngModelChange)='apply();' 
                                id='fullscreenTypeCover',
                                [value]='"cover"'
                            )
                            label.btn.btn-secondary(for='fullscreenTypeCover')
                                span(translate) Cover
                    .form-line(*ngIf='config.store.backgroundPlugin.backgroundFullscreenType === "contain"')
                        .header
                            .title(translate) Repeat type
                        .btn-group
                            input.btn-check(
                                type='radio',
                                name='backgroundFullscreenRepeatType',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFullscreenRepeatType',
                                (ngModelChange)='apply();' 
                                id='fullscreenRepeatTypeRepeat',
                                [value]='"repeat"'
                            )
                            label.btn.btn-secondary(for='fullscreenRepeatTypeRepeat')
                                span(translate) Repeat
                            input.btn-check(
                                type='radio',
                                name='backgroundFullscreenRepeatType',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFullscreenRepeatType',
                                (ngModelChange)='apply();' 
                                id='fullscreenRepeatTypeNoRepeat',
                                [value]='"no-repeat"'
                            )
                            label.btn.btn-secondary(for='fullscreenRepeatTypeNoRepeat')
                                span(translate) No Repeat

                .content-box(*ngIf='config.store.backgroundPlugin.backgroundShowType === "float"')
                    h4(translate) Float Parameters
                    .form-line
                        .header
                            .title(translate) Float size
                            .description(translate) Unit: px
                        input.me-3(
                            type='range',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundFloatSize',
                            (mouseup)='apply();',
                            min='0',
                            max='1000',
                            step='1'
                        )
                        button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin.backgroundFloatSize = 300; apply();')
                            i.fas.fa-solid.fa-rotate-left
                        input.form-control.font-size-input(
                            type='number',
                            min='0',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundFloatSize',
                            (ngModelChange)='apply();',
                        )
                    .form-line
                        .header
                            .title(translate) Float X offset
                            .description(translate) Unit: px
                        input.me-3(
                            type='range',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundFloatX',
                            (mouseup)='apply();',
                            min='-100',
                            max='1000',
                            step='1'
                        )
                        button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin.backgroundFloatX = 0; apply();')
                            i.fas.fa-solid.fa-rotate-left
                        input.form-control.font-size-input(
                            type='number',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundFloatX',
                            (ngModelChange)='apply();',
                        )
                    .form-line
                        .header
                            .title(translate) Float Y offset
                            .description(translate) Unit: px
                        input.me-3(
                            type='range',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundFloatY',
                            (mouseup)='apply();',
                            min='-100',
                            max='1000',
                            step='1'
                        )
                        button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin.backgroundFloatY = 0; apply();')
                            i.fas.fa-solid.fa-rotate-left
                        input.form-control.font-size-input(
                            type='number',
                            [(ngModel)]='config.store.backgroundPlugin.backgroundFloatY',
                            (ngModelChange)='apply();',
                        )

                    .form-line
                        .header
                            .title(translate) Float X align
                        .btn-group
                            input.btn-check(
                                type='radio',
                                name='floatXAlign',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatXAlign',
                                (ngModelChange)='apply();' 
                                id='floatXAlignLeft',
                                [value]='"left"'
                            )
                            label.btn.btn-secondary(for='floatXAlignLeft')
                                span(translate) Left
                            input.btn-check(
                                type='radio',
                                name='floatXAlign',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatXAlign',
                                (ngModelChange)='apply();' 
                                id='floatXAlignCenter',
                                [value]='"center"'
                            )
                            label.btn.btn-secondary(for='floatXAlignCenter')
                                span(translate) Center
                            input.btn-check(
                                type='radio',
                                name='floatXAlign',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatXAlign',
                                (ngModelChange)='apply();' 
                                id='floatXAlignRight',
                                [value]='"right"'
                            )
                            label.btn.btn-secondary(for='floatXAlignRight')
                                span(translate) Right
                    .form-line
                        .header
                            .title(translate) Float Y align
                        .btn-group
                            input.btn-check(
                                type='radio',
                                name='floatYAlign',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatYAlign',
                                (ngModelChange)='apply();' 
                                id='floatYAlignTop',
                                [value]='"top"'
                            )
                            label.btn.btn-secondary(for='floatYAlignTop')
                                span(translate) Top
                            input.btn-check(
                                type='radio',
                                name='floatYAlign',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatYAlign',
                                (ngModelChange)='apply();' 
                                id='floatYAlignCenter',
                                [value]='"center"'
                            )
                            label.btn.btn-secondary(for='floatYAlignCenter')
                                span(translate) Center
                            input.btn-check(
                                type='radio',
                                name='floatYAlign',
                                [(ngModel)]='config.store.backgroundPlugin.backgroundFloatYAlign',
                                (ngModelChange)='apply();' 
                                id='floatYAlignBottom',
                                [value]='"bottom"'
                            )
                            label.btn.btn-secondary(for='floatYAlignBottom')
                                span(translate) Bottom
                    .content-box(*ngIf='config.store.backgroundPlugin.backgroundShowType === "float"')
                        h4(translate) Drop Shadow Parameters
                        .form-line
                            .header
                                .title(translate) Enable drop shadow
                                .description 
                            toggle(
                                [(ngModel)]='config.store.backgroundPlugin.backgroundDropShadowEnabled',
                                (ngModelChange)='apply();',
                            )
                        .content-box(*ngIf='config.store.backgroundPlugin.backgroundDropShadowEnabled === true')
                            .form-line
                                .header
                                    .title(translate) Drop shadow X offset
                                    .description(translate) Unit: px
                                input.me-3(
                                    type='range',
                                    [(ngModel)]='config.store.backgroundPlugin.backgroundDropShadowX',
                                    (mouseup)='apply();',
                                    min='-200',
                                    max='200',
                                    step='1'
                                )
                                button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin.backgroundDropShadowX = 0; apply();')
                                    i.fas.fa-solid.fa-rotate-left
                                input.form-control.font-size-input(
                                    type='number',
                                    [(ngModel)]='config.store.backgroundPlugin.backgroundDropShadowX',
                                    (ngModelChange)='apply();',
                                )
                            .form-line
                                .header
                                    .title(translate) Drop shadow Y offset
                                    .description(translate) Unit: px
                                input.me-3(
                                    type='range',
                                    [(ngModel)]='config.store.backgroundPlugin.backgroundDropShadowY',
                                    (mouseup)='apply();',
                                    min='-200',
                                    max='200',
                                    step='1'
                                )
                                button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin.backgroundDropShadowY = 0; apply();')
                                    i.fas.fa-solid.fa-rotate-left
                                input.form-control.font-size-input(
                                    type='number',
                                    [(ngModel)]='config.store.backgroundPlugin.backgroundDropShadowY',
                                    (ngModelChange)='apply();',
                                )
                            .form-line
                                .header
                                    .title(translate) Drop shadow blur
                                    .description(translate) Unit: px
                                input.me-3(
                                    type='range',
                                    [(ngModel)]='config.store.backgroundPlugin.backgroundDropShadowBlur',
                                    (mouseup)='apply();',
                                    min='0',
                                    max='100',
                                    step='0.1'
                                )
                                button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin.backgroundDropShadowBlur = 0; apply();')
                                    i.fas.fa-solid.fa-rotate-left
                                input.form-control.font-size-input(
                                    type='number',
                                    min='0',
                                    max='100',
                                    step='0.1',
                                    [(ngModel)]='config.store.backgroundPlugin.backgroundDropShadowBlur',
                                    (ngModelChange)='apply();',
                                )
                            .form-line
                                .header
                                    .title(translate) Drop shadow color
                                    .description(translate) Use RGBA format(#FF0000A0) or use color name(red, green, blue, etc...)
                                input.form-control.font-family-input(
                                    type='text',
                                    [(ngModel)]='config.store.backgroundPlugin.backgroundDropShadowColor',
                                    (ngModelChange)='apply();',
                        )

                .h4(translate) Background Filters
                ng-container(*ngFor='let item of filters')
                    .form-line
                        .header
                            .title(translate) {{item.title}}
                            .description(translate) {{item.description}}
                        input.me-3(
                            type='range',
                            [(ngModel)]='config.store.backgroundPlugin[item.model]',
                            (mouseup)='apply();',
                            min='{{item.min}}',
                            max='{{item.max}}',
                            step='{{item.step}}'
                        )
                        button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin[item.model] = item.default; apply();')
                            i.fas.fa-solid.fa-rotate-left
                        input.form-control.font-size-input(
                            type='number',
                            min='{{item.min}}',
                            max='{{item.max}}',
                            step='{{item.step}}',
                            [(ngModel)]='config.store.backgroundPlugin[item.model]',
                            (ngModelChange)='apply();',
                        )
                .h4(translate) Extra Settings
                ng-container(*ngFor='let item of extraSettings')
                    .form-line
                        .header
                            .title(translate) {{item.title}}
                            .description(translate) {{item.description}}
                        input.me-3(
                            type='range',
                            [(ngModel)]='config.store.backgroundPlugin[item.model]',
                            (mouseup)='apply();',
                            min='{{item.min}}',
                            max='{{item.max}}',
                            step='{{item.step}}'
                        )
                        button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin[item.model] = item.default; apply();')
                            i.fas.fa-solid.fa-rotate-left
                        input.form-control.font-size-input(
                            type='number',
                            min='{{item.min}}',
                            max='{{item.max}}',
                            step='{{item.step}}',
                            [(ngModel)]='config.store.backgroundPlugin[item.model]',
                            (ngModelChange)='apply();',
                        )

    li(ngbNavItem)
        a(ngbNavLink, translate) UI Font
        ng-template(ngbNavContent)
            .form-line
                .header
                    .title(translate) Enable UI font replace
                    .description(translate) Do not affect the terminal font, the terminal font still uses the font in the [appearance] configuration
                toggle(
                    [(ngModel)]='config.store.backgroundPlugin.uiFontEnabled',
                    (ngModelChange)='apply();',
                )

            .content-box(*ngIf='config.store.backgroundPlugin.uiFontEnabled === true')
                .form-line
                    .header
                        .title(translate) UI Font Family
                    .input-group.w-75
                        input.form-control.font-family-input(
                            type='text',
                            [(ngModel)]='config.store.backgroundPlugin.uiFontFamily',
                            (ngModelChange)='apply();',
                        )
                        input.form-control.font-size-input(
                            type='number',
                            min='5',
                            max='48',
                            [(ngModel)]='config.store.backgroundPlugin.uiFontSize',
                            (ngModelChange)='apply();',
                        )


                .form-line
                    .header
                        .title(translate) Fix close button font
                        .description(translate) After enable, restore the tab closing button to the default style
                    toggle(
                        [(ngModel)]='config.store.backgroundPlugin.uiFontTabBarCloseBtnFix',
                        (ngModelChange)='apply();',
                    )

    li(ngbNavItem)
        a(ngbNavLink, translate) Others
        ng-template(ngbNavContent)

            ng-container(*ngFor='let item of others')
                .form-line
                    .header
                        .title(translate) {{item.title}}
                        .description(translate) {{item.description}}
                    input.me-3(
                        type='range',
                        [(ngModel)]='config.store.backgroundPlugin[item.model]',
                        (mouseup)='apply();',
                        min='{{item.min}}',
                        max='{{item.max}}',
                        step='{{item.step}}'
                    )
                    button.btn.btn-outline-secondary.me-3((click)='config.store.backgroundPlugin[item.model] = item.default; apply();')
                        i.fas.fa-solid.fa-rotate-left
                    input.form-control.font-size-input(
                        type='number',
                        min='{{item.min}}',
                        max='{{item.max}}',
                        step='{{item.step}}',
                        [(ngModel)]='config.store.backgroundPlugin[item.model]',
                        (ngModelChange)='apply();',
                    )


div([ngbNavOutlet]='nav')